<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/model/dto/web/response/trip/TripResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/model/dto/web/response/trip/TripResponse.java" />
              <option name="originalContent" value="package com.smartlab.zippy.model.dto.web.response.trip;&#10;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.UUID;&#10;&#10;@Data&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;public class TripResponse {&#10;    private UUID userId;&#10;    private UUID robotId;&#10;    private String robotCode;&#10;    private LocalDateTime startTime;&#10;    private LocalDateTime endTime;&#10;    private LocalDateTime startTime;&#10;    private LocalDateTime endTime;&#10;}&#10;" />
              <option name="updatedContent" value="package com.smartlab.zippy.model.dto.web.response.trip;&#10;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.UUID;&#10;&#10;@Data&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;public class TripResponse {&#10;    private UUID userId;&#10;    private UUID robotId;&#10;    private String robotCode;&#10;    private String tripCode;&#10;    private LocalDateTime startTime;&#10;    private LocalDateTime endTime;&#10;    private String status;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/model/entity/RobotContainer.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/model/entity/RobotContainer.java" />
              <option name="originalContent" value="package com.smartlab.zippy.model.entity;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;@Entity&#10;@Table(name = &quot;robot_container&quot;)&#10;public class RobotContainer {&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    &#10;    private UUID robotId;&#10;    @Column(name = &quot;container_code&quot;, unique = true)&#10;&#10;    &#10;    @JoinColumn(name = &quot;robot_id&quot;, insertable = false, updatable = false)&#10;    private Robot robot;&#10;    &#10;    @OneToMany(mappedBy = &quot;container&quot;, cascade = CascadeType.ALL)&#10;    private List&lt;Product&gt; products;&#10;}&#10;" />
              <option name="updatedContent" value="package com.smartlab.zippy.model.entity;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;import lombok.ToString;&#10;import java.util.List;&#10;import java.util.UUID;&#10;&#10;@Data&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;robot_container&quot;)&#10;@ToString(exclude = {&quot;robot&quot;, &quot;products&quot;}) // Exclude circular reference fields&#10;public class RobotContainer {&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;    &#10;    @Column(name = &quot;robot_id&quot;)&#10;    private UUID robotId;&#10;&#10;    @Column(name = &quot;container_code&quot;, unique = true)&#10;    private String containerCode;&#10;&#10;    private String status;&#10;    &#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;robot_id&quot;, insertable = false, updatable = false)&#10;    private Robot robot;&#10;    &#10;    @OneToMany(mappedBy = &quot;container&quot;, cascade = CascadeType.ALL)&#10;    private List&lt;Product&gt; products;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/model/entity/Trip.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/model/entity/Trip.java" />
              <option name="originalContent" value="package com.smartlab.zippy.model.entity;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;import java.util.UUID;&#10;&#10;@Data&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;trip&quot;)&#10;public class Trip {&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.UUID)&#10;    private UUID id;&#10;    &#10;    @Column(name = &quot;robot_id&quot;)&#10;    private UUID robotId;&#10;    &#10;    private String status;&#10;&#10;    @Column(name = &quot;start_time&quot;)&#10;    private LocalDateTime startTime;&#10;&#10;    @Column(name = &quot;end_time&quot;)&#10;    private LocalDateTime endTime;&#10;&#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;user_id&quot;, insertable = false, updatable = false)&#10;    private User user;&#10;    &#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;robot_id&quot;, insertable = false, updatable = false)&#10;    private Robot robot;&#10;    &#10;    @OneToMany(mappedBy = &quot;trip&quot;, cascade = CascadeType.ALL)&#10;    private List&lt;Order&gt; orders;&#10;    &#10;    @OneToMany(mappedBy = &quot;trip&quot;, cascade = CascadeType.ALL)&#10;    private List&lt;Product&gt; products;&#10;}&#10;" />
              <option name="updatedContent" value="package com.smartlab.zippy.model.entity;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;import java.util.UUID;&#10;&#10;@Data&#10;@Builder&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;trip&quot;)&#10;public class Trip {&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.UUID)&#10;    private UUID id;&#10;    &#10;    @Column(name = &quot;trip_code&quot;, unique = true)&#10;    private String tripCode;&#10;&#10;    @Column(name = &quot;start_point&quot;)&#10;    private String startPoint;&#10;&#10;    @Column(name = &quot;end_point&quot;)&#10;    private String endPoint;&#10;    &#10;    @Column(name = &quot;user_id&quot;)&#10;    private UUID userId;&#10;    &#10;    @Column(name = &quot;robot_id&quot;)&#10;    private UUID robotId;&#10;    &#10;    private String status;&#10;&#10;    @Column(name = &quot;start_time&quot;)&#10;    private LocalDateTime startTime;&#10;&#10;    @Column(name = &quot;end_time&quot;)&#10;    private LocalDateTime endTime;&#10;&#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;user_id&quot;, insertable = false, updatable = false)&#10;    private User user;&#10;    &#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;robot_id&quot;, insertable = false, updatable = false)&#10;    private Robot robot;&#10;    &#10;    @OneToMany(mappedBy = &quot;trip&quot;, cascade = CascadeType.ALL)&#10;    private List&lt;Order&gt; orders;&#10;    &#10;    @OneToMany(mappedBy = &quot;trip&quot;, cascade = CascadeType.ALL)&#10;    private List&lt;Product&gt; products;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/repository/RobotContainerRepository.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/repository/RobotContainerRepository.java" />
              <option name="originalContent" value="package com.smartlab.zippy.repository;&#10;&#10;import com.smartlab.zippy.model.entity.RobotContainer;&#10;import org.springframework.data.jpa.repository.JpaRepository;&#10;import org.springframework.data.jpa.repository.Query;&#10;import org.springframework.data.repository.CrudRepository;&#10;import org.springframework.data.repository.query.Param;&#10;import org.springframework.stereotype.Repository;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;import java.util.UUID;&#10;&#10;@Repository&#10;public interface RobotContainerRepository extends CrudRepository&lt;RobotContainer, Long&gt; {&#10;    List&lt;RobotContainer&gt; findByRobotId(UUID robotId);&#10;    List&lt;RobotContainer&gt; findByStatus(String status);&#10;" />
              <option name="updatedContent" value="package com.smartlab.zippy.repository;&#10;&#10;import com.smartlab.zippy.model.entity.RobotContainer;&#10;import org.springframework.data.jpa.repository.JpaRepository;&#10;import org.springframework.data.jpa.repository.Query;&#10;import org.springframework.data.repository.CrudRepository;&#10;import org.springframework.data.repository.query.Param;&#10;import org.springframework.stereotype.Repository;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;import java.util.UUID;&#10;&#10;@Repository&#10;public interface RobotContainerRepository extends CrudRepository&lt;RobotContainer, Long&gt; {&#10;    List&lt;RobotContainer&gt; findByRobotId(UUID robotId);&#10;    List&lt;RobotContainer&gt; findByStatus(String status);&#10;    Optional&lt;RobotContainer&gt; findByContainerCode(String containerCode);&#10;&#10;    @Query(&quot;SELECT rc FROM RobotContainer rc JOIN rc.robot r WHERE r.code = :robotCode AND rc.containerCode = :containerCode&quot;)&#10;    Optional&lt;RobotContainer&gt; findByRobotCodeAndContainerCode(@Param(&quot;robotCode&quot;) String robotCode, @Param(&quot;containerCode&quot;) String containerCode);&#10;&#10;    @Query(&quot;SELECT rc FROM RobotContainer rc JOIN rc.robot r WHERE r.code = :robotCode&quot;)&#10;    List&lt;RobotContainer&gt; findByRobotCode(@Param(&quot;robotCode&quot;) String robotCode);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/service/trip/TripCodeGenerator.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/smartlab/zippy/service/trip/TripCodeGenerator.java" />
              <option name="updatedContent" value="package com.smartlab.zippy.service.trip;&#10;&#10;import org.springframework.stereotype.Service;&#10;&#10;import java.security.SecureRandom;&#10;&#10;@Service&#10;public class TripCodeGenerator {&#10;    &#10;    private static final String PREFIX = &quot;T-&quot;;&#10;    private static final int CODE_LENGTH = 6;&#10;    private static final SecureRandom random = new SecureRandom();&#10;    &#10;    public String generateTripCode() {&#10;        StringBuilder codeBuilder = new StringBuilder(PREFIX);&#10;        &#10;        for (int i = 0; i &lt; CODE_LENGTH; i++) {&#10;            codeBuilder.append(random.nextInt(10));&#10;        }&#10;        &#10;        return codeBuilder.toString();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>